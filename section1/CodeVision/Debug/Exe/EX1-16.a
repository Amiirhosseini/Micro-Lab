;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.12 Advanced
;Automatic Program Generator
;© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project : EX1-16
;Version : 1
;Date    : 2/18/2022
;Author  : Amirreza Hosseini 9820363
;Company :
;Comments:
;
;
;Chip type               : ATmega16
;Program type            : Application
;AVR Core Clock frequency: 8.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*******************************************************/
;
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;
;unsigned char hexvalue[10]= {0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F}; //0 to 9 in 7seg

	.DSEG
;int number;
;
;void Q1(void);
;void Q2(void);
;void Q3(void);
;void Q4(void);
;void Q5(void);
;void Q6(void);
;void show_numb(int);
;
;
;void main(void)
; 0000 0028 {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0029 // Declare your local variables here
; 0000 002A 
; 0000 002B // Input/Output Ports initialization
; 0000 002C // Port A initialization
; 0000 002D // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 002E DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 002F // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0030 PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0031 
; 0000 0032 // Port B initialization
; 0000 0033 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 0034 DDRB=(1<<DDB7) | (1<<DDB6) | (1<<DDB5) | (1<<DDB4) | (1<<DDB3) | (1<<DDB2) | (1<<DDB1) | (1<<DDB0);
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0035 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 0036 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0037 
; 0000 0038 // Port C initialization
; 0000 0039 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 003A DDRC=(1<<DDC7) | (1<<DDC6) | (1<<DDC5) | (1<<DDC4) | (1<<DDC3) | (1<<DDC2) | (1<<DDC1) | (1<<DDC0);
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 003B // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 003C PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 003D 
; 0000 003E // Port D initialization
; 0000 003F // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=out Bit2=out Bit1=out Bit0=out
; 0000 0040 DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (1<<DDD3) | (1<<DDD2) | (1<<DDD1) | (1<<DDD0);
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0041 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0042 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (1<<PORTD3) | (1<<PORTD2) | (1<<PORTD1) | (1<<PORTD0);
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0043 
; 0000 0044     Q1();
;PCODE: $0000001E VOL: 0
; 0000 0045     Q2();
;PCODE: $0000001F VOL: 0
; 0000 0046     Q3();
;PCODE: $00000020 VOL: 0
; 0000 0047     Q4();
;PCODE: $00000021 VOL: 0
; 0000 0048     Q5();
;PCODE: $00000022 VOL: 0
; 0000 0049 
; 0000 004A //while (1)
; 0000 004B //      {
; 0000 004C //      }
; 0000 004D 
; 0000 004E }
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;
;
;void Q1(void)
; 0000 0052 {
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0053 int i;
; 0000 0054    for (i=4;i>0;i--){
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;	i -> R16,R17
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0055         PORTB=0x00;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0056       delay_ms(500);
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0057         PORTB=0xFF;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 0058         delay_ms(500);
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0059     };
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 005A PORTB=0x00;
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 005B }
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;
;void Q2(void)
; 0000 005E {
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 005F int i;
; 0000 0060    for (i=6;i>0;i--){
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;	i -> R16,R17
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 0061     delay_ms(50);
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 0062     PORTB.0=1;
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 0063     delay_ms(50);
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 0064     PORTB.0=0;
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 0065     PORTB.1=1;
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 0066     delay_ms(50);
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 0067     PORTB.1=0;
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 0068     PORTB.2=1;
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0000 0069     delay_ms(50);
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 006A     PORTB.2=0;
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 006B     PORTB.3=1;
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 006C     delay_ms(50);
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 006D     PORTB.3=0;
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0000 006E     PORTB.4=1;
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 006F     delay_ms(50);
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
; 0000 0070     PORTB.4=0;
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 0071     PORTB.5=1;
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0000 0072     delay_ms(50);
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 0073     PORTB.5=0;
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0000 0074     PORTB.6=1;
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 0075     delay_ms(50);
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 0076     PORTB.6=0;
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 0077     PORTB.7=1;
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0000 0078     delay_ms(50);
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 0079     PORTB.7=0;
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0000 007A     }
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
; 0000 007B }
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;
;void Q3(void)
; 0000 007E {
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 007F  PORTB=PINA;
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 0080 }
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;
;void Q4(void)
; 0000 0083 {
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
; 0000 0084 
; 0000 0085 int i;
; 0000 0086     for (i=9;i>=0;i--) {
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;	i -> R16,R17
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0000 0087       delay_ms(700);
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0000 0088         PORTD.0 = 0;
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0000 0089         PORTD.1 = 0;
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 008A         PORTD.2 = 0;
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 008B         PORTD.3 = 0;
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
; 0000 008C        PORTC = hexvalue[i];
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
; 0000 008D     };
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0000 008E      delay_ms(700);
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
; 0000 008F     PORTD= (1<<PORTD3) | (1<<PORTD2) | (1<<PORTD1) | (1<<PORTD0);
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
; 0000 0090 }
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;
;
;void Q5(void)
; 0000 0094 {
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
; 0000 0095     number=PINA;
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0000 0096     number=number*10;
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
; 0000 0097 
; 0000 0098     while (1) {
;PCODE: $000000C8 VOL: 0
; 0000 0099     Q6();
;PCODE: $000000C9 VOL: 0
; 0000 009A     number=number-2;
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
; 0000 009B     show_numb(number);
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
; 0000 009C 
; 0000 009D     };
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
; 0000 009E 
; 0000 009F }
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;
;
;void Q6(void)
; 0000 00A3 {
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
; 0000 00A4 //farz bar inke number*10 ro darim
; 0000 00A5 
; 0000 00A6    if(PIND.4==0)  //momayez
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
; 0000 00A7    {
; 0000 00A8       number = number - (number %10);
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
; 0000 00A9    }
; 0000 00AA    if(PIND.5==0)   //yekan
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
; 0000 00AB    {
; 0000 00AC       number = number - (number%100) + (number%10);
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
; 0000 00AD    }
; 0000 00AE 
; 0000 00AF    if(PIND.6==0)    //dahgan
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
; 0000 00B0    {
; 0000 00B1       number = number - (number%1000) + (number%100) + (number%10);
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
; 0000 00B2    }
; 0000 00B3 
; 0000 00B4    if(PIND.7==0)    //sadgan
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
; 0000 00B5    {
; 0000 00B6        number = number - (number%10000) + (number%1000) + (number%100) + (number%10);
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
; 0000 00B7    }
; 0000 00B8  }
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;
;
;void show_numb(int numb)
; 0000 00BC {
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
; 0000 00BD     int momayez;
; 0000 00BE     int yekan;
; 0000 00BF     int dahgan;
; 0000 00C0     int sadgan;
; 0000 00C1 
; 0000 00C2  //   numb=numb*10;
; 0000 00C3     momayez=numb%10;
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;	numb -> Y+8
;	momayez -> R16,R17
;	yekan -> R18,R19
;	dahgan -> R20,R21
;	sadgan -> Y+6
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
; 0000 00C4     numb=numb/10;
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
; 0000 00C5     yekan=numb%10;
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
; 0000 00C6     numb=numb/10;
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
; 0000 00C7     dahgan=numb%10;
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
; 0000 00C8     numb=numb/10;
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
; 0000 00C9     sadgan=numb%10;
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
; 0000 00CA     numb=numb/10;
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
; 0000 00CB 
; 0000 00CC 
; 0000 00CD     PORTD.0=0;
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
; 0000 00CE     PORTC=hexvalue[sadgan];
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
; 0000 00CF     delay_ms(20);
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
; 0000 00D0     PORTD.0=1;
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
; 0000 00D1 
; 0000 00D2     PORTD.1=0;
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
; 0000 00D3     PORTC=hexvalue[dahgan];
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
; 0000 00D4     delay_ms(20);
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
; 0000 00D5     PORTD.1=1;
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
; 0000 00D6 
; 0000 00D7     PORTD.2=0;
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
; 0000 00D8     PORTC=hexvalue[yekan];
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
; 0000 00D9     PORTC.7=1;
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
; 0000 00DA     delay_ms(20);
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
; 0000 00DB     PORTD.2=1;
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
; 0000 00DC 
; 0000 00DD     PORTD.3=0;
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
; 0000 00DE     PORTC=hexvalue[momayez];
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
; 0000 00DF     delay_ms(20);
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
; 0000 00E0     PORTD.3=1;
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
; 0000 00E1 
; 0000 00E2 
; 0000 00E3 
; 0000 00E4  //  PORTD= (1<<PORTD3) | (1<<PORTD2) | (1<<PORTD1) | (1<<PORTD0);
; 0000 00E5 }
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
