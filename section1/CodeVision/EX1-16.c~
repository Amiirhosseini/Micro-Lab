/*******************************************************
This program was created by the
CodeWizardAVR V3.12 Advanced
Automatic Program Generator
© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
http://www.hpinfotech.com

Project : EX1-16
Version : 1
Date    : 2/18/2022
Author  : Amirreza Hosseini 9820363
Company : 
Comments: 


Chip type               : ATmega16
Program type            : Application
AVR Core Clock frequency: 8.000000 MHz
Memory model            : Small
External RAM size       : 0
Data Stack size         : 256
*******************************************************/

#include <mega16.h>
#include <delay.h>

unsigned char hexvalue[10]= {0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F}; //0 to 9 in 7seg
int number;

void Q1(void);
void Q2(void);
void Q3(void);
void Q4(void);
void Q5(void);
void Q6(void);
void show_numb(int);


void main(void)
{
// Declare your local variables here

// Input/Output Ports initialization
// Port A initialization
// Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In 
DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
// State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T 
PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);

// Port B initialization
// Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out 
DDRB=(1<<DDB7) | (1<<DDB6) | (1<<DDB5) | (1<<DDB4) | (1<<DDB3) | (1<<DDB2) | (1<<DDB1) | (1<<DDB0);
// State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0 
PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);

// Port C initialization
// Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out 
DDRC=(1<<DDC7) | (1<<DDC6) | (1<<DDC5) | (1<<DDC4) | (1<<DDC3) | (1<<DDC2) | (1<<DDC1) | (1<<DDC0);
// State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0 
PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);

// Port D initialization
// Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=out Bit2=out Bit1=out Bit0=out 
DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (1<<DDD3) | (1<<DDD2) | (1<<DDD1) | (1<<DDD0);
// State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T 
PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (1<<PORTD3) | (1<<PORTD2) | (1<<PORTD1) | (1<<PORTD0);

    Q1();
    Q2();
    Q3();
    Q4();

     Q5();

while (1)
      {
          
          
          
      }
}


void Q1(void)
{
int i;
   for (i=4;i>0;i--){   
        PORTB=0x00; 
      delay_ms(500);    
        PORTB=0xFF;   
        delay_ms(500);   
    };
PORTB=0x00;
}

void Q2(void)
{
int i;
   for (i=6;i>0;i--){   
    delay_ms(50); 
    PORTB.0=1;
    delay_ms(50);
    PORTB.0=0;
    PORTB.1=1;
    delay_ms(50);
    PORTB.1=0;
    PORTB.2=1;
    delay_ms(50);
    PORTB.2=0;
    PORTB.3=1;
    delay_ms(50);
    PORTB.3=0;
    PORTB.4=1;     
    delay_ms(50);
    PORTB.4=0;
    PORTB.5=1;    
    delay_ms(50);
    PORTB.5=0;
    PORTB.6=1;    
    delay_ms(50);
    PORTB.6=0;
    PORTB.7=1;  
    delay_ms(50);
    PORTB.7=0;
    }  
}

void Q3(void)
{
 PORTB=PINA;
}

void Q4(void)
{

int i;
    for (i=9;i>=0;i--) {  
      delay_ms(700); 
        PORTD.0 = 0; 
        PORTD.1 = 0;
        PORTD.2 = 0;
        PORTD.3 = 0;
       PORTC = hexvalue[i];
    };
     delay_ms(700);
    PORTD= (1<<PORTD3) | (1<<PORTD2) | (1<<PORTD1) | (1<<PORTD0);
}


void Q5(void)
{
    number=PINA;                  
    number=number*10;   
                    
    while (1) { 
    Q6();
    number=number-2; 
    show_numb(number);
    
    };

}


void Q6(void)
{
//farz bar inke number*10 ro darim



   if(PIND.4==0)  //momayez              
   {
      number = number - (number %10);
   }
   if(PIND.5==0)   //yekan
   {
      number = number - (number%100) + (number%10);
   }
   
   if(PIND.6==0)    //dahgan        3478
   {
      number = number - (number%1000) + (number%100) + (number%10);
   }
   
   if(PIND.7==0)    //sadgan
   {
       number = number - (number%10000) + (number%1000) + (number%100) + (number%10);
   }
 }          
 

void show_numb(int numb)
{
    int momayez; 
    int yekan;
    int dahgan;
    int sadgan;
    
 //   numb=numb*10; 
    momayez=numb%10;
    numb=numb/10;
    yekan=numb%10;
    numb=numb/10;
    dahgan=numb%10;
    numb=numb/10;
    sadgan=numb%10;
    numb=numb/10;  
    
    
    PORTD.0=0; 
    PORTC=hexvalue[sadgan];
    delay_ms(20); 
    PORTD.0=1;
      
    PORTD.1=0;  
    PORTC=hexvalue[dahgan];
    delay_ms(20); 
    PORTD.1=1;   
     
    PORTD.2=0;
    PORTC=hexvalue[yekan];  
    PORTC.7=1;         
    delay_ms(20);
    PORTD.2=1;
              
    PORTD.3=0;
    PORTC=hexvalue[momayez]; 
    delay_ms(20); 
    PORTD.3=1;
    
              
    
 //  PORTD= (1<<PORTD3) | (1<<PORTD2) | (1<<PORTD1) | (1<<PORTD0);
}