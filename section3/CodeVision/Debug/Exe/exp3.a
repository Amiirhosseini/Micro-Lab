;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.12 Advanced
;Automatic Program Generator
;© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 3/9/2022
;Author  : Amirreza Hosseini 9820363
;Company :
;Comments:
;
;
;Chip type               : ATmega16
;Program type            : Application
;AVR Core Clock frequency: 8.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*******************************************************/
;
;
;// Alphanumeric LCD functions
;
;#include ".\source\allheaders.h"
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;
;
;
;// Declare your global variables here
;
;// External Interrupt 1 service routine
;interrupt [EXT_INT1] void ext_int1_isr(void)
; 0000 0024 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0025 // Place your code here
; 0000 0026 //
; 0000 0027 //PORTC.0=1;
; 0000 0028 //Q3();
; 0000 0029 //PORTC.0=0;
; 0000 002A 
; 0000 002B }
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;
;void main(void)
; 0000 002E {
;PCODE: $00000012 VOL: 0
; 0000 002F // Declare your local variables here
; 0000 0030 
; 0000 0031 // Input/Output Ports initialization
; 0000 0032 // Port A initialization
; 0000 0033 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 0034 DDRA=(1<<DDA7) | (1<<DDA6) | (1<<DDA5) | (1<<DDA4) | (1<<DDA3) | (1<<DDA2) | (1<<DDA1) | (1<<DDA0);
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0035 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 0036 PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 0037 
; 0000 0038 // Port B initialization
; 0000 0039 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 003A DDRB=(1<<DDB7) | (1<<DDB6) | (1<<DDB5) | (1<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 003B // State: Bit7=P Bit6=P Bit5=P Bit4=P Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 003C PORTB=(1<<PORTB7) | (1<<PORTB6) | (1<<PORTB5) | (1<<PORTB4) | (1<<PORTB3) | (1<<PORTB2) | (1<<PORTB1) | (1<<PORTB0);
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 003D 
; 0000 003E // Port C initialization
; 0000 003F // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=Out
; 0000 0040 DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (1<<DDC0);
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0041 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=0
; 0000 0042 PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0043 
; 0000 0044 // Port D initialization
; 0000 0045 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0046 DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0047 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0048 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0049 
; 0000 004A // External Interrupt(s) initialization
; 0000 004B // INT0: Off
; 0000 004C // INT1: On
; 0000 004D // INT1 Mode: Rising Edge
; 0000 004E // INT2: Off
; 0000 004F //GICR|=(1<<INT1) | (0<<INT0) | (0<<INT2);
; 0000 0050 //MCUCR=(1<<ISC11) | (1<<ISC10) | (0<<ISC01) | (0<<ISC00);
; 0000 0051 //MCUCSR=(0<<ISC2);
; 0000 0052 //GIFR=(1<<INTF1) | (0<<INTF0) | (0<<INTF2);
; 0000 0053 
; 0000 0054 // Alphanumeric LCD initialization
; 0000 0055 // Connections are specified in the
; 0000 0056 // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 0057 // RS - PORTA Bit 0
; 0000 0058 // RD - PORTA Bit 1
; 0000 0059 // EN - PORTA Bit 2
; 0000 005A // D4 - PORTA Bit 4
; 0000 005B // D5 - PORTA Bit 5
; 0000 005C // D6 - PORTA Bit 6
; 0000 005D // D7 - PORTA Bit 7
; 0000 005E // Characters/line: 16
; 0000 005F lcd_init(16);
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0060 
; 0000 0061 // Global enable interrupts
; 0000 0062 //#asm("sei")
; 0000 0063 
; 0000 0064 //Q1();
; 0000 0065 //delay_ms(1000);
; 0000 0066 //lcd_clear();
; 0000 0067 //Q2();
; 0000 0068 
; 0000 0069 Q5();
;PCODE: $00000025 VOL: 0
; 0000 006A delay_ms(500);
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 006B Q5_2();
;PCODE: $00000028 VOL: 0
; 0000 006C delay_ms(500);
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 006D Q5_3();
;PCODE: $0000002B VOL: 0
; 0000 006E delay_ms(500);
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 006F Q5_4();
;PCODE: $0000002E VOL: 0
; 0000 0070 
; 0000 0071 while (1)
;PCODE: $0000002F VOL: 0
; 0000 0072       {
; 0000 0073       // Place your code here
; 0000 0074 
; 0000 0075      // Q3();
; 0000 0076 
; 0000 0077       }
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0078 }
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;
;
