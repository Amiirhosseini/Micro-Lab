;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.12 Advanced
;Automatic Program Generator
;© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project : EXP4
;Version :
;Date    : 3/19/2022
;Author  : Amirreza Hosseini 9820363
;Company : IUT
;Comments:
;
;
;Chip type               : ATmega16
;Program type            : Application
;AVR Core Clock frequency: 8.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*******************************************************/
;
;#include ".\source\myheader.h"
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;
;// Declare your global variables here
;
;
;// External Interrupt 0 service routine
;interrupt [EXT_INT0] void ext_int0_isr(void)
; 0000 0020 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0021 // Place your code here
; 0000 0022 
; 0000 0023     Q2();
;PCODE: $0000000F VOL: 0
; 0000 0024 
; 0000 0025 }
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;
;// External Interrupt 1 service routine
;interrupt [EXT_INT1] void ext_int1_isr(void)
; 0000 0029 {
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 002A // Place your code here
; 0000 002B 
; 0000 002C      Q1_int1();
;PCODE: $00000015 VOL: 0
; 0000 002D 
; 0000 002E }
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;
;// External Interrupt 2 service routine
;interrupt [EXT_INT2] void ext_int2_isr(void)
; 0000 0032 {
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 0033 // Place your code here
; 0000 0034 
; 0000 0035     Q3();
;PCODE: $0000001B VOL: 0
; 0000 0036 
; 0000 0037 }
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;
;// Timer 0 overflow interrupt service routine
;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
; 0000 003B {
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 003C // Place your code here
; 0000 003D 
; 0000 003E     Q1_time0();
;PCODE: $00000021 VOL: 0
; 0000 003F 
; 0000 0040 }
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;
;void main(void)
; 0000 0043 {
;PCODE: $00000025 VOL: 0
; 0000 0044 // Declare your local variables here
; 0000 0045 
; 0000 0046 // Input/Output Ports initialization
; 0000 0047 // Port A initialization
; 0000 0048 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0049 DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 004A // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 004B PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 004C 
; 0000 004D // Port B initialization
; 0000 004E // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 004F DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0050 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0051 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0052 
; 0000 0053 // Port C initialization
; 0000 0054 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 0055 DDRC=(1<<DDC7) | (1<<DDC6) | (1<<DDC5) | (1<<DDC4) | (1<<DDC3) | (1<<DDC2) | (1<<DDC1) | (1<<DDC0);
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0056 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 0057 PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0058 
; 0000 0059 // Port D initialization
; 0000 005A // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 005B DDRD=(1<<DDD7) | (1<<DDD6) | (1<<DDD5) | (1<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 005C // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 005D PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 005E 
; 0000 005F // Timer/Counter 0 initialization
; 0000 0060 // Clock source: System Clock
; 0000 0061 // Clock value: 7.813 kHz
; 0000 0062 // Mode: Normal top=0xFF
; 0000 0063 // OC0 output: Disconnected
; 0000 0064 // Timer Period: 9.984 ms
; 0000 0065 TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (1<<CS02) | (0<<CS01) | (1<<CS00);
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 0066 TCNT0=0xB2;
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0067 OCR0=0x00;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0068 
; 0000 0069 
; 0000 006A // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 006B TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (1<<TOIE0);
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 006C 
; 0000 006D // External Interrupt(s) initialization
; 0000 006E // INT0: On
; 0000 006F // INT0 Mode: Rising Edge
; 0000 0070 // INT1: On
; 0000 0071 // INT1 Mode: Rising Edge
; 0000 0072 // INT2: On
; 0000 0073 // INT2 Mode: Rising Edge
; 0000 0074 GICR|=(1<<INT1) | (1<<INT0) | (1<<INT2);
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0075 MCUCR=(1<<ISC11) | (1<<ISC10) | (1<<ISC01) | (1<<ISC00);
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0076 MCUCSR=(1<<ISC2);
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0077 GIFR=(1<<INTF1) | (1<<INTF0) | (1<<INTF2);
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0078 
; 0000 0079 // Alphanumeric LCD initialization
; 0000 007A // Connections are specified in the
; 0000 007B // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 007C // RS - PORTC Bit 0
; 0000 007D // RD - PORTC Bit 1
; 0000 007E // EN - PORTC Bit 2
; 0000 007F // D4 - PORTC Bit 4
; 0000 0080 // D5 - PORTC Bit 5
; 0000 0081 // D6 - PORTC Bit 6
; 0000 0082 // D7 - PORTC Bit 7
; 0000 0083 // Characters/line: 16
; 0000 0084 lcd_init(16);
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 0085 
; 0000 0086 // Global enable interrupts
; 0000 0087 #asm("sei")
;PCODE: $00000049 VOL: 0
	sei
;PCODE: $0000004A VOL: 0
; 0000 0088 
; 0000 0089 while (1)
;PCODE: $0000004B VOL: 0
; 0000 008A       {
; 0000 008B       // Place your code here
; 0000 008C 
; 0000 008D       }
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 008E }
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;
;
