;#include ".\source\allheaders.h"
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;
;int i=0;
;int dataL,dataH,data1,data2,rpm=0,rpmi2,T;
;int flagi=0,flagi2=1;

	.DSEG
;
;
;void Q4(void)
; 0001 000A {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0001 000B  int input;
; 0001 000C  input = PINA;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;	input -> R16,R17
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0001 000D 
; 0001 000E  OCR0= 0.99*input + 0.5;   //rabeteye be dast amade
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0001 000F 
; 0001 0010 }
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;
;
;void Q5_clockwise(void)
; 0001 0014 {
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0001 0015     i++;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0001 0016     switch(i){
;PCODE: $00000024 VOL: 0
; 0001 0017     case 1: PORTB= 0x30;delay_ms(20); break;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0001 0018     case 2: PORTB= 0x60;delay_ms(20); break;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0001 0019     case 3: PORTB= 0xc0;delay_ms(20); break;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0001 001A     case 4: PORTB= 0x90;delay_ms(20); i=0; break;
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0001 001B     }
;PCODE: $00000049 VOL: 0
; 0001 001C 
; 0001 001D }
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;
;void Q5_inv(void)
; 0001 0020 {
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0001 0021     i++;
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0001 0022     switch(i){
;PCODE: $00000051 VOL: 0
; 0001 0023     case 1: PORTB= 0xc0;delay_ms(20); break;
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0001 0024     case 2: PORTB= 0x60;delay_ms(20); break;
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0001 0025     case 3: PORTB= 0x30;delay_ms(20); break;
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0001 0026     case 4: PORTB= 0x90;delay_ms(20); i=0; break;
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0001 0027     }
;PCODE: $00000076 VOL: 0
; 0001 0028 
; 0001 0029 }
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;
;
;void Q6(void)
; 0001 002D {
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0001 002E   char display[20];
; 0001 002F 
; 0001 0030 //read from ICR
; 0001 0031 dataL=ICR1L;
;PCODE: $0000007B VOL: 0
;	display -> Y+0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0001 0032 dataH=ICR1H;
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0001 0033 
; 0001 0034 
; 0001 0035 if(flagi==0)
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0001 0036 {
; 0001 0037   data1=dataH<<8|dataL;
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0001 0038   flagi2=0;
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0001 0039 }
; 0001 003A 
; 0001 003B if(flagi2==0)
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0001 003C {
; 0001 003D     data2=dataH<<8|dataL;
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0001 003E     flagi=0;
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0001 003F }
; 0001 0040 
; 0001 0041 if(flagi!=0 && flagi2!=0)
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
; 0001 0042 {
; 0001 0043  T=(data2-data1)*1000;
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0001 0044  rpm=T*50;
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0001 0045 }
; 0001 0046 
; 0001 0047 //if(abs(rpmi2-rpm)>5)
; 0001 0048 //{
; 0001 0049  rpm=data1;
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
; 0001 004A  //lcd_clear();
; 0001 004B  lcd_gotoxy(0,1);
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
; 0001 004C  sprintf(display,"%d",rpm);
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
; 0001 004D  lcd_puts(display);
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
; 0001 004E  rpmi2=rpm;
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
; 0001 004F //}
; 0001 0050 
; 0001 0051 
; 0001 0052 }
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
