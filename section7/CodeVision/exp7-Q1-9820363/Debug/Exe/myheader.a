;#include ".\source\allheaders.h"
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;
;
;void q1(void)
; 0001 0006 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0001 0007     unsigned char name[64]="";
; 0001 0008     unsigned char in='';
; 0001 0009     int i=0;
; 0001 000A     in = getchar();
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;	name -> Y+4
;	in -> R17
;	i -> R18,R19
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0001 000B     putchar(in);
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0001 000C     name[0]='(';
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0001 000D     name[1]='<';
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0001 000E     name[2]='<';
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0001 000F     name[3]='>';
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0001 0010     name[4]='>';
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0001 0011     name[5]=')';
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0001 0012     i=i+6;
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0001 0013     while (in!='\r'){
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0001 0014         name[i]=in;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0001 0015         in = getchar();
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0001 0016         putchar(in);
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0001 0017         i++;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0001 0018     }
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0001 0019     name[i]='(';
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0001 001A     name[i+1]='<';
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0001 001B     name[i+2]='<';
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0001 001C     name[i+3]='>';
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0001 001D     name[i+4]='>';
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0001 001E     name[i+5]=')';
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0001 001F     name[i+6]='\r';
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0001 0020     puts(name);
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0001 0021 }
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
